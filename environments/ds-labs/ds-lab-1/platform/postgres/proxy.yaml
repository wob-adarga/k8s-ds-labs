---
apiVersion: v1
kind: Service
metadata:
  name: db-proxy
  namespace: db-operator
  labels:
    app: db-proxy
spec:
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app: db-proxy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-proxy-config
  namespace: db-operator
  labels:
    app: db-proxy
data:
  envoy.yaml: |-
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 9901

    static_resources:
      listeners:
        - name: postgres
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 5432
          filter_chains:
            - filters:
              - name: envoy.filters.network.postgres_proxy
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.network.postgres_proxy.v3alpha.PostgresProxy
                  stat_prefix: postgres
              - name: envoy.tcp_proxy
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                  stat_prefix: tcp
                  cluster: rds_postgres_cluster
      clusters:
        - name: rds_postgres_cluster
          connect_timeout: 1s
          type: STRICT_DNS
          load_assignment:
            cluster_name: rds_postgres_cluster
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: ${PDB_ENDPOINT}
                        port_value: ${PDB_PORT}
    layered_runtime:
      layers:
        - name: static
          static_layer:
            envoy:
              resource_limits:
                listener:
                  postgres:
                    connection_limit: 100
            overload:
              global_downstream_max_connections: 100
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-proxy
  namespace: db-operator
  labels:
    app: db-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-proxy
  template:
    metadata:
      labels:
        app: db-proxy
    spec:
      restartPolicy: Always
      initContainers:
      - name: envsubst
        image: eu.gcr.io/adarga-docker/toolbox/envsubst
        imagePullPolicy: IfNotPresent
        env:
        - name: ENVSUBST
          value: /template/envoy.yaml,/subst
        - name: PDB_ENDPOINT
          value: ds-lab-1.cluster-csr9h8eq61nj.eu-west-2.rds.amazonaws.com
        - name: PDB_PORT
          value: "5432"
        volumeMounts:
        - name: config-tmpl
          mountPath: /template
        - name: config-dir
          mountPath: /subst
      containers:
      - name: postgres-proxy
        image: envoyproxy/envoy:v1.16-latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: postgres
          containerPort: 5432
        resources:
          requests:
            cpu: 20m
            memory: 15Mi
        volumeMounts:
        - name: config-dir
          mountPath: /etc/envoy
          readOnly: true
      volumes:
      - name: config-tmpl
        configMap:
          name: db-proxy-config
          defaultMode: 0744
      - name: config-dir
        emptyDir: {}
