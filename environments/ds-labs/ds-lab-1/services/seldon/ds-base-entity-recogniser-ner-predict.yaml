kind: SeldonDeployment
apiVersion: machinelearning.seldon.io/v1
metadata:
  name: ds-base-entity-recogniser-ner-predict
  namespace: seldon
  labels: {}
spec:
  name: ds-base-entity-recogniser-ner-predict
  protocol: seldon
  annotations: {}
  predictors:
    - name: default
      graph:
        name: ds-base-entity-recogniser-ner-predict
        type: MODEL
        parameters:
          - name: "name"
            value: "/model/models/tner-xlm-roberta-base-ontonotes5/"
            type: STRING

      componentSpecs:
        - spec:
            containers:
              - name: ds-base-entity-recogniser-ner-predict
                image: eu.gcr.io/adarga-docker/ds-base-entity-recogniser-ner-predict:from_kustomize
                env:
                  - name: TRANSFORMERS_CACHE
                    value: "/tmp/.transformers_cache"
                  - name: LOGGING_CONFIG
                    value: "/app/logging.conf"
                  - name: LOG_LEVEL
                    value: INFO
                  - name: TRACING
                    value: '1'
                  - name: JAEGER_AGENT_HOST
                    value: jaeger-agent.observability.svc.cluster.local
                  - name: JAEGER_AGENT_PORT
                    value: '5775'
                  - name: JAEGER_SAMPLER_TYPE
                    value: const
                  - name: JAEGER_SAMPLER_PARAM
                    value: '1'
                resources:
                  requests:
                    memory: 1Gi
                volumeMounts:
                  - mountPath: /models
                    name: model-data

            initContainers:
              - name: spacy-initialiser
                image: eu.gcr.io/adarga-docker/toolbox/oras:0.10.0-b
                imagePullPolicy: IfNotPresent
                env:
                  - name: OMWVERSION
                    valueFrom:
                      configMapKeyRef:
                        name: opensource-model-weights-config
                        key: OMWVERSION
                  - name: AWS_ECR
                    valueFrom:
                      configMapKeyRef:
                        name: opensource-model-weights-config
                        key: AWS_ECR


                command:
                  - /bin/sh
                  - -xc
                  - |
                    export HOME=/tmp # to workaround privileged execution issues
                    oras-aws-ecr-login
                    echo "downloading model"
                    cd /models
                    oras pull ${AWS_ECR}/omw/tner-xlm-roberta-base-ontonotes5:${OMWVERSION} --allow-all
                    echo "done"

                volumeMounts:
                  - mountPath: /models
                    name: model-data
            volumes:
              - emptyDir: {}
                name: model-data
      replicas: 1
