kind: SeldonDeployment
apiVersion: machinelearning.seldon.io/v1
metadata:
  name: future-signals-predict
  namespace: seldon
  labels: {}
spec:
  name: future-signals-predict
  protocol: seldon
  annotations: {}
  predictors:
    - name: default
      graph:
        name: future-signals-predict
        type: MODEL

      componentSpecs:
        - spec:
            containers:
              - name: future-signals-predict
                image: eu.gcr.io/adarga-docker/ds-future-references-future_signals_predict:from_kustomize
                env:
                  - name: TRANSFORMERS_CACHE
                    value: "/tmp/.transformers_cache"
                  - name: LOG_LEVEL
                    value: INFO
                  - name: MODEL_DATA
                    value: /models/models/facebook-bart-large-mnli

                volumeMounts:
                  - mountPath: /models
                    name: model-data

            initContainers:
               - name: bart-initialiser
                 image: eu.gcr.io/adarga-docker/toolbox/oras:0.10.0-b
                 imagePullPolicy: IfNotPresent
                 env:
                   - name: OMWVERSION
                     valueFrom:
                       configMapKeyRef:
                         name: opensource-model-weights-config
                         key: OMWVERSION
                   - name: AWS_ECR
                     valueFrom:
                       configMapKeyRef:
                         name: opensource-model-weights-config
                         key: AWS_ECR
                 command:
                   - /bin/sh
                   - -xc
                   - |
                     export HOME=/tmp # to workaround privileged execution issues
                     oras-aws-ecr-login
                     echo "downloading model"
                     cd /models
                     oras pull ${AWS_ECR}/omw/facebook-bart-large-mnli:${OMWVERSION} --allow-all

                     echo "done"

                 volumeMounts:
                   - mountPath: /models
                     name: model-data
            volumes:
              - emptyDir: {}
                name: model-data

          replicas: 1
