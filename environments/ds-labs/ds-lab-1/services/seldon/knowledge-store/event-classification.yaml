kind: SeldonDeployment
apiVersion: machinelearning.seldon.io/v1
metadata:
  name: event-classifier
  namespace: seldon
  labels: {}
spec:
  name: event-classifier
  protocol: seldon
  annotations: {}
  predictors:
    - name: default
      graph:
        name: event-classifier
        type: MODEL

      componentSpecs:
        - spec:
            containers:
              - name: event-classifier
                image: eu.gcr.io/adarga-docker/ds-knowledge-store-seldon-bertee:from_kustomize
                env:
                  - name: LOG_LEVEL
                    value: INFO
                  - name: MODEL_NAME
                    value: EventClassification
                  - name: MODEL_DATA
                    value: /models/event-classification

                volumeMounts:
                  - mountPath: /models
                    name: model-data

#            initContainers:
#              - name: spacy-initialiser
#                image: eu.gcr.io/adarga-docker/toolbox/oras:0.10.0-b
#                imagePullPolicy: IfNotPresent
#                env:
#                  - name: OMWVERSION
#                    valueFrom:
#                      configMapKeyRef:
#                        name: opensource-model-weights-config
#                        key: OMWVERSION
#                  - name: AWS_ECR
#                    valueFrom:
#                      configMapKeyRef:
#                        name: opensource-model-weights-config
#                        key: AWS_ECR
#                command:
#                  - /bin/sh
#                  - -xc
#                  - |
#                    export HOME=/tmp # to workaround privileged execution issues
#                    oras-aws-ecr-login
#                    echo "downloading model"
#                    cd /models
#                    oras pull ${AWS_ECR}/omw/spacy-small-2-3:${OMWVERSION} --allow-all
#                    tar -xf models/spacy-small-2-3/weights.tar.gz --strip-components 2
#
#                    echo "done"
#
#                volumeMounts:
#                  - mountPath: /models
#                    name: model-data
#            volumes:
#              - emptyDir: {}
#                name: model-data

          replicas: 1
